{"version":3,"file":"aria.min.js","sources":["../src/aria.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Enhancements to Bootstrap components for accessibility.\n *\n * @module     theme_boost/aria\n * @copyright  2018 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Pending from 'core/pending';\n\n/**\n * Drop downs from bootstrap don't support keyboard accessibility by default.\n */\nconst dropdownFix = () => {\n    let focusEnd = false;\n    const setFocusEnd = () => {\n        focusEnd = true;\n    };\n    const getFocusEnd = () => {\n        const result = focusEnd;\n        focusEnd = false;\n        return result;\n    };\n\n    // Special handling for \"up\" keyboard control.\n    document.addEventListener('keydown', e => {\n        if (e.target.matches('[data-toggle=\"dropdown\"]')) {\n            const trigger = e.key;\n\n            // Up key opens the menu at the end.\n            if (trigger == 'ArrowUp') {\n                // Focus the end of the menu, not the beginning.\n                setFocusEnd();\n            }\n\n            // Space key or Enter key opens the menu.\n            if (trigger == ' ' || trigger == 'Enter') {\n                // Cancel random scroll.\n                e.preventDefault();\n                // Open the menu instead.\n                e.target.click();\n            }\n        }\n    });\n\n    // Special handling for navigation keys when menu is open.\n    const shiftFocus = element => {\n        const delayedFocus = pendingPromise => {\n            element.focus();\n            pendingPromise.resolve();\n        };\n        setTimeout(delayedFocus, 50, new Pending('core/aria:delayed-focus'));\n    };\n\n    $('.dropdown').on('shown.bs.dropdown', e => {\n        // We need to focus on the first menuitem.\n        const menu = e.target.querySelector('[role=\"menu\"]');\n        let menuItems = false;\n        let foundMenuItem = false;\n\n        if (menu) {\n            menuItems = menu.querySelectorAll('[role=\"menuitem\"]');\n        }\n        if (menuItems && menuItems.length > 0) {\n            if (getFocusEnd()) {\n                foundMenuItem = menuItems[menuItems.length - 1];\n            } else {\n                // The first menu entry, pretty reasonable.\n                foundMenuItem = menuItems[0];\n            }\n        }\n        if (foundMenuItem) {\n            shiftFocus(foundMenuItem);\n        }\n    });\n    // Search for menu items by finding the first item that has\n    // text starting with the typed character (case insensitive).\n    document.addEventListener('keypress', e => {\n        if (e.target.matches('.dropdown [role=\"menu\"] [role=\"menuitem\"]')) {\n            const menu = e.target.closest('[role=\"menu\"]');\n            if (!menu) {\n                return;\n            }\n            const menuItems = menu.querySelectorAll('[role=\"menuitem\"]');\n            if (!menuItems) {\n                return;\n            }\n\n            const trigger = e.key.toLowerCase();\n\n            for (let i = 0; i < menuItems.length; i++) {\n                const item = menuItems[i];\n                const itemText = item.text.trim().toLowerCase();\n                if (itemText.indexOf(trigger) == 0) {\n                    shiftFocus(item);\n                    break;\n                }\n            }\n        }\n    });\n\n    // Keyboard navigation for arrow keys, home and end keys.\n    document.addEventListener('keydown', e => {\n        if (e.target.matches('.dropdown [role=\"menu\"] [role=\"menuitem\"]')) {\n            const trigger = e.key;\n            let next = false;\n            const menu = e.target.closest('[role=\"menu\"]');\n\n            if (!menu) {\n                return;\n            }\n            const menuItems = menu.querySelectorAll('[role=\"menuitem\"]');\n            if (!menuItems) {\n                return;\n            }\n            // Down key.\n            if (trigger == 'ArrowDown') {\n                for (let i = 0; i < menuItems.length - 1; i++) {\n                    if (menuItems[i] == e.target) {\n                        next = menuItems[i + 1];\n                        break;\n                    }\n                }\n                if (!next) {\n                    // Wrap to first item.\n                    next = menuItems[0];\n                }\n\n            } else if (trigger == 'ArrowUp') {\n                // Up key.\n                for (let i = 1; i < menuItems.length; i++) {\n                    if (menuItems[i] == e.target) {\n                        next = menuItems[i - 1];\n                        break;\n                    }\n                }\n                if (!next) {\n                    // Wrap to last item.\n                    next = menuItems[menuItems.length - 1];\n                }\n\n            } else if (trigger == 'Home') {\n                // Home key.\n                next = menuItems[0];\n\n            } else if (trigger == 'End') {\n                // End key.\n                next = menuItems[menuItems.length - 1];\n            }\n            // Variable next is set if we do want to act on the keypress.\n            if (next) {\n                e.preventDefault();\n                shiftFocus(next);\n            }\n            return;\n        }\n    });\n\n    $('.dropdown').on('hidden.bs.dropdown', e => {\n        // We need to focus on the menu trigger.\n        const trigger = e.target.querySelector('[data-toggle=\"dropdown\"]');\n        if (trigger) {\n            shiftFocus(trigger);\n        }\n    });\n};\n\n/**\n * After page load, focus on any element with special autofocus attribute.\n */\nconst autoFocus = () => {\n    window.addEventListener(\"load\", () => {\n        const alerts = document.querySelectorAll('[data-aria-autofocus=\"true\"][role=\"alert\"]');\n        Array.prototype.forEach.call(alerts, autofocusElement => {\n            // According to the specification an role=\"alert\" region is only read out on change to the content\n            // of that region.\n            autofocusElement.innerHTML += ' ';\n            autofocusElement.removeAttribute('data-aria-autofocus');\n        });\n    });\n};\n\n/**\n * Changes the focus to the correct tab based on the key that is pressed.\n * @param {KeyboardEvent} e\n */\nconst updateTabFocus = e => {\n    const tabList = e.target.closest('[role=\"tablist\"]');\n    const vertical = tabList.getAttribute('aria-orientation') == 'vertical';\n    const rtl = window.right_to_left();\n    const arrowNext = vertical ? 'ArrowDown' : (rtl ? 'ArrowLeft' : 'ArrowRight');\n    const arrowPrevious = vertical ? 'ArrowUp' : (rtl ? 'ArrowRight' : 'ArrowLeft');\n    const tabs = Array.prototype.filter.call(\n        tabList.querySelectorAll('[role=\"tab\"]'),\n        tab => getComputedStyle(tab).display !== 'none'); // We only work with the visible tabs.\n\n    for (let i = 0; i < tabs.length; i++) {\n        tabs[i].index = i;\n    }\n\n    switch (e.key) {\n        case arrowNext:\n            e.preventDefault();\n            if (e.target.index !== undefined && tabs[e.target.index + 1]) {\n                tabs[e.target.index + 1].focus();\n            } else {\n                tabs[0].focus();\n            }\n            break;\n        case arrowPrevious:\n            e.preventDefault();\n            if (e.target.index !== undefined && tabs[e.target.index - 1]) {\n                tabs[e.target.index - 1].focus();\n            } else {\n                tabs[tabs.length - 1].focus();\n            }\n            break;\n        case 'Home':\n            e.preventDefault();\n            tabs[0].focus();\n            break;\n        case 'End':\n            e.preventDefault();\n            tabs[tabs.length - 1].focus();\n            break;\n        case 'Enter':\n        case ' ':\n            e.preventDefault();\n            $(e.target).tab('show');\n            tabs.forEach(tab => {\n                tab.tabIndex = -1;\n            });\n            e.target.tabIndex = 0;\n    }\n};\n\n/**\n * Fix accessibility issues regarding tab elements focus and their tab order in Bootstrap navs.\n */\nconst tabElementFix = () => {\n    document.addEventListener('keydown', e => {\n        if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Home', 'End', 'Enter', ' '].includes(e.key)) {\n            if (e.target.matches('[role=\"tablist\"] [role=\"tab\"]')) {\n                updateTabFocus(e);\n            }\n        }\n    });\n\n    document.addEventListener('click', e => {\n        if (e.target.matches('[role=\"tablist\"] [role=\"tab\"]')) {\n            const tabs = e.target.closest('[role=\"tablist\"]').querySelectorAll('[role=\"tab\"]');\n            e.preventDefault();\n            $(e.target).tab('show');\n            tabs.forEach(tab => {\n                tab.tabIndex = -1;\n            });\n            e.target.tabIndex = 0;\n        }\n    });\n};\n\nexport const init = () => {\n    dropdownFix();\n    autoFocus();\n    tabElementFix();\n};\n"],"names":["dropdownFix","focusEnd","document","addEventListener","e","target","matches","trigger","key","preventDefault","click","shiftFocus","element","setTimeout","pendingPromise","focus","resolve","Pending","on","result","menu","querySelector","menuItems","foundMenuItem","querySelectorAll","length","closest","toLowerCase","i","item","text","trim","indexOf","next","tabElementFix","includes","tabList","vertical","getAttribute","rtl","window","right_to_left","arrowNext","arrowPrevious","tabs","Array","prototype","filter","call","tab","getComputedStyle","display","index","undefined","forEach","tabIndex","updateTabFocus","alerts","autofocusElement","innerHTML","removeAttribute"],"mappings":"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"}