{"version":3,"file":"message_drawer_view_conversation_renderer.min.js","sources":["../src/message_drawer_view_conversation_renderer.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module updates the UI for the conversation page in the message\n * drawer.\n *\n * The module will take a patch from the message_drawer_view_conversation_patcher\n * module and update the UI to reflect the changes.\n *\n * This is the only module that ever modifies the UI of the conversation page.\n *\n * @module     core_message/message_drawer_view_conversation_renderer\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n[\n    'jquery',\n    'core/notification',\n    'core/str',\n    'core/templates',\n    'core/user_date',\n    'core_message/message_drawer_view_conversation_constants',\n    'core/aria',\n],\nfunction(\n    $,\n    Notification,\n    Str,\n    Templates,\n    UserDate,\n    Constants,\n    Aria\n) {\n    var SELECTORS = Constants.SELECTORS;\n    var TEMPLATES = Constants.TEMPLATES;\n    var CONVERSATION_TYPES = Constants.CONVERSATION_TYPES;\n\n    /**\n     * Get the messages container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var getMessagesContainer = function(body) {\n        return body.find(SELECTORS.CONTENT_MESSAGES_CONTAINER);\n    };\n\n    /**\n     * Show the messages container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var showMessagesContainer = function(body) {\n        getMessagesContainer(body).removeClass('hidden');\n    };\n\n    /**\n     * Hide the messages container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var hideMessagesContainer = function(body) {\n        getMessagesContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the self-conversation message container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var getSelfConversationMessageContainer = function(body) {\n        return body.find(SELECTORS.SELF_CONVERSATION_MESSAGE_CONTAINER);\n    };\n\n    /**\n     * Hide the self-conversation message container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var hideSelfConversationMessageContainer = function(body) {\n        return getSelfConversationMessageContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the contact request sent container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var getContactRequestSentContainer = function(body) {\n        return body.find(SELECTORS.CONTACT_REQUEST_SENT_MESSAGE_CONTAINER);\n    };\n\n    /**\n     * Hide the contact request sent container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The messages container element.\n     */\n    var hideContactRequestSentContainer = function(body) {\n        return getContactRequestSentContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the footer container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer container element.\n     */\n    var getFooterContentContainer = function(footer) {\n        return footer.find(SELECTORS.CONTENT_MESSAGES_FOOTER_CONTAINER);\n    };\n\n    /**\n     * Show the footer container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterContent = function(footer) {\n        getFooterContentContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterContent = function(footer) {\n        getFooterContentContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Get the footer edit mode container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer container element.\n     */\n    var getFooterEditModeContainer = function(footer) {\n        return footer.find(SELECTORS.CONTENT_MESSAGES_FOOTER_EDIT_MODE_CONTAINER);\n    };\n\n    /**\n     * Show the footer edit mode container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterEditMode = function(footer) {\n        getFooterEditModeContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer edit mode container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterEditMode = function(footer) {\n        getFooterEditModeContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Get the footer placeholder.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer placeholder container element.\n     */\n    var getFooterPlaceholderContainer = function(footer) {\n        return footer.find(SELECTORS.PLACEHOLDER_CONTAINER);\n    };\n\n    /**\n     * Show the footer placeholder\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterPlaceholder = function(footer) {\n        getFooterPlaceholderContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer placeholder\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterPlaceholder = function(footer) {\n        getFooterPlaceholderContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Get the footer Require add as contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer Require add as contact container element.\n     */\n    var getFooterRequireContactContainer = function(footer) {\n        return footer.find(SELECTORS.CONTENT_MESSAGES_FOOTER_REQUIRE_CONTACT_CONTAINER);\n    };\n\n    /**\n     * Show the footer add as contact dialogue.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterRequireContact = function(footer) {\n        getFooterRequireContactContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer add as contact dialogue.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterRequireContact = function(footer) {\n        getFooterRequireContactContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Get the footer Required to unblock contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer Required to unblock contact container element.\n     */\n    var getFooterRequireUnblockContainer = function(footer) {\n        return footer.find(SELECTORS.CONTENT_MESSAGES_FOOTER_REQUIRE_UNBLOCK_CONTAINER);\n    };\n\n    /**\n     * Show the footer Required to unblock contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterRequireUnblock = function(footer) {\n        getFooterRequireUnblockContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer Required to unblock contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterRequireUnblock = function(footer) {\n        getFooterRequireUnblockContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Get the footer Unable to message contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The footer Unable to message contact container element.\n     */\n    var getFooterUnableToMessageContainer = function(footer) {\n        return footer.find(SELECTORS.CONTENT_MESSAGES_FOOTER_UNABLE_TO_MESSAGE_CONTAINER);\n    };\n\n    /**\n     * Show the footer Unable to message contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var showFooterUnableToMessage = function(footer) {\n        getFooterUnableToMessageContainer(footer).removeClass('hidden');\n    };\n\n    /**\n     * Hide the footer Unable to message contact container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideFooterUnableToMessage = function(footer) {\n        getFooterUnableToMessageContainer(footer).addClass('hidden');\n    };\n\n    /**\n     * Hide all header elements.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var hideAllHeaderElements = function(header) {\n        hideHeaderContent(header);\n        hideHeaderEditMode(header);\n        hideHeaderPlaceholder(header);\n    };\n\n    /**\n     * Hide all footer dialogues and messages.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     */\n    var hideAllFooterElements = function(footer) {\n        hideFooterContent(footer);\n        hideFooterEditMode(footer);\n        hideFooterPlaceholder(footer);\n        hideFooterRequireContact(footer);\n        hideFooterRequireUnblock(footer);\n        hideFooterUnableToMessage(footer);\n    };\n\n    /**\n     * Get the content placeholder container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The body placeholder container element.\n     */\n    var getContentPlaceholderContainer = function(body) {\n        return body.find(SELECTORS.CONTENT_PLACEHOLDER_CONTAINER);\n    };\n\n    /**\n     * Show the content placeholder.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var showContentPlaceholder = function(body) {\n        getContentPlaceholderContainer(body).removeClass('hidden');\n    };\n\n    /**\n     * Hide the content placeholder.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var hideContentPlaceholder = function(body) {\n        getContentPlaceholderContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the header content container element.\n     *\n     * @param  {Object} header Conversation header container element.\n     * @return {Object} The header content container element.\n     */\n    var getHeaderContent = function(header) {\n        return header.find(SELECTORS.HEADER);\n    };\n\n    /**\n     * Show the header content.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var showHeaderContent = function(header) {\n        getHeaderContent(header).removeClass('hidden');\n    };\n\n    /**\n     * Hide the header content.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var hideHeaderContent = function(header) {\n        getHeaderContent(header).addClass('hidden');\n    };\n\n    /**\n     * Get the header edit mode container element.\n     *\n     * @param  {Object} header Conversation header container element.\n     * @return {Object} The header content container element.\n     */\n    var getHeaderEditMode = function(header) {\n        return header.find(SELECTORS.HEADER_EDIT_MODE);\n    };\n\n    /**\n     * Show the header edit mode container.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var showHeaderEditMode = function(header) {\n        getHeaderEditMode(header).removeClass('hidden');\n    };\n\n    /**\n     * Hide the header edit mode container.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var hideHeaderEditMode = function(header) {\n        getHeaderEditMode(header).addClass('hidden');\n    };\n\n    /**\n     * Get the header placeholder container element.\n     *\n     * @param  {Object} header Conversation header container element.\n     * @return {Object} The header placeholder container element.\n     */\n    var getHeaderPlaceholderContainer = function(header) {\n        return header.find(SELECTORS.HEADER_PLACEHOLDER_CONTAINER);\n    };\n\n    /**\n     * Show the header placeholder.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var showHeaderPlaceholder = function(header) {\n        getHeaderPlaceholderContainer(header).removeClass('hidden');\n    };\n\n    /**\n     * Hide the header placeholder.\n     *\n     * @param  {Object} header Conversation header container element.\n     */\n    var hideHeaderPlaceholder = function(header) {\n        getHeaderPlaceholderContainer(header).addClass('hidden');\n    };\n\n    /**\n     * Get the emoji picker container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The emoji picker container element.\n     */\n    var getEmojiPickerContainer = function(footer) {\n        return footer.find(SELECTORS.EMOJI_PICKER_CONTAINER);\n    };\n\n    /**\n     * Get the emoji picker container element.\n     *\n     * @param  {Object} footer Conversation footer container element.\n     * @return {Object} The emoji picker container element.\n     */\n    var getEmojiAutoCompleteContainer = function(footer) {\n        return footer.find(SELECTORS.EMOJI_AUTO_COMPLETE_CONTAINER);\n    };\n\n    /**\n     * Get a message element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @param  {Number} messageId the Message id.\n     * @return {Object} A message element from the conversation.\n     */\n    var getMessageElement = function(body, messageId) {\n        var messagesContainer = getMessagesContainer(body);\n        return messagesContainer.find('[data-message-id=\"' + messageId + '\"]');\n    };\n\n    /**\n     * Get the day container element. The day container element holds a list of messages for that day.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @param  {Number} dayTimeCreated Midnight timestamp for the day.\n     * @return {Object} jQuery object\n     */\n    var getDayElement = function(body, dayTimeCreated) {\n        var messagesContainer = getMessagesContainer(body);\n        return messagesContainer.find('[data-day-id=\"' + dayTimeCreated + '\"]');\n    };\n\n    /**\n     * Get the more messages loading icon container element.\n     *\n     * @param  {Object} body Conversation body container element.\n     * @return {Object} The more messages loading container element.\n     */\n    var getMoreMessagesLoadingIconContainer = function(body) {\n        return body.find(SELECTORS.MORE_MESSAGES_LOADING_ICON_CONTAINER);\n    };\n\n    /**\n     * Show the more messages loading icon.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var showMoreMessagesLoadingIcon = function(body) {\n        getMoreMessagesLoadingIconContainer(body).removeClass('hidden');\n    };\n\n    /**\n     * Hide the more messages loading icon.\n     *\n     * @param  {Object} body Conversation body container element.\n     */\n    var hideMoreMessagesLoadingIcon = function(body) {\n        getMoreMessagesLoadingIconContainer(body).addClass('hidden');\n    };\n\n    /**\n     * Get the confirm dialogue container element.\n     *\n     * @param  {Object} root The container element to search.\n     * @return {Object} The confirm dialogue container element.\n     */\n    var getConfirmDialogueContainer = function(root) {\n        return root.find(SELECTORS.CONFIRM_DIALOGUE_CONTAINER);\n    };\n\n    /**\n     * Show the confirm dialogue container element.\n     *\n     * @param  {Object} root The container element containing a dialogue.\n     */\n    var showConfirmDialogueContainer = function(root) {\n        var container = getConfirmDialogueContainer(root);\n        var siblings = container.siblings(':not(.hidden)');\n        Aria.hide(siblings.get());\n        siblings.attr('data-confirm-dialogue-hidden', true);\n\n        container.removeClass('hidden');\n    };\n\n    /**\n     * Hide the confirm dialogue container element.\n     *\n     * @param  {Object} root The container element containing a dialogue.\n     */\n    var hideConfirmDialogueContainer = function(root) {\n        var container = getConfirmDialogueContainer(root);\n        var siblings = container.siblings('[data-confirm-dialogue-hidden=\"true\"]');\n        Aria.unhide(siblings.get());\n        siblings.removeAttr('data-confirm-dialogue-hidden');\n\n        container.addClass('hidden');\n    };\n\n    /**\n     * Set the number of selected messages.\n     *\n     * @param {Object} header The header container element.\n     * @param {Number} value The new number to display.\n     */\n    var setMessagesSelectedCount = function(header, value) {\n        getHeaderEditMode(header).find(SELECTORS.MESSAGES_SELECTED_COUNT).text(value);\n    };\n\n    /**\n     * Format message for the mustache template, transform camelCase properties to lowercase properties.\n     *\n     * @param  {Array} messages Array of message objects.\n     * @param  {Object} datesCache Cache timestamps and their formatted date string.\n     * @return {Array} Messages formated for mustache template.\n     */\n    var formatMessagesForTemplate = function(messages, datesCache) {\n        return messages.map(function(message) {\n            return {\n                id: message.id,\n                isread: message.isRead,\n                fromloggedinuser: message.fromLoggedInUser,\n                userfrom: message.userFrom,\n                text: message.text,\n                formattedtime: message.timeCreated ? datesCache[message.timeCreated] : null\n            };\n        });\n    };\n\n    /**\n     * Create rendering promises for each day containing messages.\n     *\n     * @param  {Object} header The header container element.\n     * @param  {Object} body The body container element.\n     * @param  {Object} footer The footer container element.\n     * @param  {Array} days Array of days containing messages.\n     * @param  {Object} datesCache Cache timestamps and their formatted date string.\n     * @return {Promise} Days rendering promises.\n     */\n    var renderAddDays = function(header, body, footer, days, datesCache) {\n        var messagesContainer = getMessagesContainer(body);\n        var daysRenderPromises = days.map(function(data) {\n            return Templates.render(TEMPLATES.DAY, {\n                timestamp: data.value.timestamp,\n                messages: formatMessagesForTemplate(data.value.messages, datesCache)\n            });\n        });\n\n        return $.when.apply($, daysRenderPromises).then(function() {\n            // Wait until all of the rendering is done for each of the days\n            // to ensure they are added to the page in the correct order.\n            days.forEach(function(data, index) {\n                daysRenderPromises[index]\n                    .then(function(html) {\n                        if (data.before) {\n                            var element = getDayElement(body, data.before.timestamp);\n                            return $(html).insertBefore(element);\n                        } else {\n                            return messagesContainer.append(html);\n                        }\n                    })\n                    .catch(function() {\n                        // Fail silently.\n                    });\n            });\n\n            return;\n        });\n    };\n\n    /**\n     * Add (more) messages to day containers.\n     *\n     * @param  {Object} header The header container element.\n     * @param  {Object} body The body container element.\n     * @param  {Object} footer The footer container element.\n     * @param  {Array} messages List of messages.\n     * @param  {Object} datesCache Cache timestamps and their formatted date string.\n     * @return {Promise} Messages rendering promises.\n     */\n    var renderAddMessages = function(header, body, footer, messages, datesCache) {\n        var messagesData = messages.map(function(data) {\n            return data.value;\n        });\n        var formattedMessages = formatMessagesForTemplate(messagesData, datesCache);\n\n        return Templates.render(TEMPLATES.MESSAGES, {messages: formattedMessages})\n            .then(function(html) {\n                var messageList = $(html);\n                messages.forEach(function(data) {\n                    var messageHtml = messageList.find('[data-message-id=\"' + data.value.id + '\"]');\n                    if (data.before) {\n                        var element = getMessageElement(body, data.before.id);\n                        return messageHtml.insertBefore(element);\n                    } else {\n                        var dayContainer = getDayElement(body, data.day.timestamp);\n                        var dayMessagesContainer = dayContainer.find(SELECTORS.DAY_MESSAGES_CONTAINER);\n                        return dayMessagesContainer.append(messageHtml);\n                    }\n                });\n\n                return;\n            });\n    };\n\n    /**\n     * Update existing messages.\n     *\n     * @param  {Object} header The header container element.\n     * @param  {Object} body The body container element.\n     * @param  {Object} footer The footer container element.\n     * @param  {Array} messages List of messages.\n     * @param  {Object} datesCache Cache timestamps and their formatted date string.\n     */\n    var renderUpdateMessages = function(header, body, footer, messages, datesCache) {\n        messages.forEach(function(message) {\n            var before = message.before;\n            var after = message.after;\n            var element = getMessageElement(body, before.id);\n\n            if (before.id != after.id) {\n                element.attr('data-message-id', after.id);\n            }\n\n            if (before.timeCreated != after.timeCreated) {\n                var formattedTime = datesCache[after.timeCreated];\n                element.find(SELECTORS.LOADING_ICON_CONTAINER).addClass('hidden');\n                element.find(SELECTORS.TIME_CREATED).text(formattedTime).removeClass('hidden');\n            }\n\n            if (before.sendState != after.sendState) {\n                var loading = element.find(SELECTORS.LOADING_ICON_CONTAINER);\n                var time = element.find(SELECTORS.TIME_CREATED);\n                var retry = element.find(SELECTORS.RETRY_SEND);\n\n                loading.addClass('hidden');\n                Aria.hide(loading.get());\n\n                time.addClass('hidden');\n                Aria.hide(time.get());\n\n                retry.addClass('hidden');\n                Aria.hide(retry.get());\n\n                element.removeClass('border border-danger');\n\n                switch (after.sendState) {\n                    case 'pending':\n                        loading.removeClass('hidden');\n                        Aria.unhide(loading.get());\n                        break;\n                    case 'error':\n                        retry.removeClass('hidden');\n                        Aria.unhide(retry.get());\n                        element.addClass('border border-danger');\n                        break;\n                    case 'sent':\n                        time.removeClass('hidden');\n                        Aria.unhide(time.get());\n                        break;\n                }\n            }\n\n            if (before.text != after.text) {\n                element.find(SELECTORS.TEXT_CONTAINER).html(after.text);\n            }\n\n            if (before.errorMessage != after.errorMessage) {\n                var messageContainer = element.find(SELECTORS.ERROR_MESSAGE_CONTAINER);\n                var message = messageContainer.find(SELECTORS.ERROR_MESSAGE);\n\n                if (after.errorMessage) {\n                    messageContainer.removeClass('hidden');\n                    Aria.unhide(messageContainer.get());\n                    message.text(after.errorMessage);\n                } else {\n                    messageContainer.addClass('hidden');\n                    Aria.unhide(messageContainer.get());\n                    message.text('');\n                }\n            }\n        });\n    };\n\n    /**\n     * Remove days from conversation.\n     *\n     * @param  {Object} body The body container element.\n     * @param  {Array} days Array of days to be removed.\n     */\n    var renderRemoveDays = function(body, days) {\n        days.forEach(function(data) {\n            getDayElement(body, data.timestamp).remove();\n        });\n    };\n\n    /**\n     * Remove messages from conversation.\n     *\n     * @param  {Object} body The body container element.\n     * @param  {Array} messages Array of messages to be removed.\n     */\n    var renderRemoveMessages = function(body, messages) {\n        messages.forEach(function(data) {\n            getMessageElement(body, data.id).remove();\n        });\n    };\n\n    /**\n     * Render the full conversation base on input from the statemanager.\n     *\n     * This will pre-load all of the formatted timestamps for each message that\n     * needs to render to reduce the number of networks requests.\n     *\n     * @param  {Object} header The header container element.\n     * @param  {Object} body The body container element.\n     * @param  {Object} footer The footer container element.\n     * @param  {Object} data The conversation diff.\n     * @return {Object} jQuery promise.\n     */\n    var renderConversation = function(header, body, footer, data) {\n        var renderingPromises = [];\n        var hasAddDays = data.days.add.length > 0;\n        var hasAddMessages = data.messages.add.length > 0;\n        var hasUpdateMessages = data.messages.update.length > 0;\n        var timestampsToFormat = [];\n        var datesCachePromise = $.Deferred().resolve({}).promise();\n\n        if (hasAddDays) {\n            // Search for all of the timeCreated values in all of the messages in all of\n            // the days that we need to render.\n            timestampsToFormat = timestampsToFormat.concat(data.days.add.reduce(function(carry, day) {\n                return carry.concat(day.value.messages.reduce(function(timestamps, message) {\n                    if (message.timeCreated) {\n                        timestamps.push(message.timeCreated);\n                    }\n                    return timestamps;\n                }, []));\n            }, []));\n        }\n\n        if (hasAddMessages) {\n            // Search for all of the timeCreated values in all of the messages that we\n            // need to render.\n            timestampsToFormat = timestampsToFormat.concat(data.messages.add.reduce(function(timestamps, message) {\n                if (message.value.timeCreated) {\n                    timestamps.push(message.value.timeCreated);\n                }\n                return timestamps;\n            }, []));\n        }\n\n        if (hasUpdateMessages) {\n            timestampsToFormat = timestampsToFormat.concat(data.messages.update.reduce(function(timestamps, message) {\n                if (message.before.timeCreated != message.after.timeCreated) {\n                    timestamps.push(message.after.timeCreated);\n                }\n                return timestamps;\n            }, []));\n        }\n\n        if (timestampsToFormat.length) {\n            // If we have timestamps then pre-load the formatted version of each of them\n            // in a single request to the server. This saves the templates doing multiple\n            // individual requests.\n            datesCachePromise = Str.get_string('strftimetime24', 'core_langconfig')\n                .then(function(format) {\n                    var requests = timestampsToFormat.map(function(timestamp) {\n                        return {\n                            timestamp: timestamp,\n                            format: format\n                        };\n                    });\n\n                    return UserDate.get(requests);\n                })\n                .then(function(formattedTimes) {\n                    return timestampsToFormat.reduce(function(carry, timestamp, index) {\n                        carry[timestamp] = formattedTimes[index];\n                        return carry;\n                    }, {});\n                });\n        }\n\n        if (hasAddDays) {\n            renderingPromises.push(datesCachePromise.then(function(datesCache) {\n                return renderAddDays(header, body, footer, data.days.add, datesCache);\n            }));\n        }\n\n        if (hasAddMessages) {\n            renderingPromises.push(datesCachePromise.then(function(datesCache) {\n                return renderAddMessages(header, body, footer, data.messages.add, datesCache);\n            }));\n        }\n\n        if (hasUpdateMessages) {\n            renderingPromises.push(datesCachePromise.then(function(datesCache) {\n                return renderUpdateMessages(header, body, footer, data.messages.update, datesCache);\n            }));\n        }\n\n        if (data.days.remove.length > 0) {\n            renderRemoveDays(body, data.days.remove);\n        }\n\n        if (data.messages.remove.length > 0) {\n            renderRemoveMessages(body, data.messages.remove);\n        }\n\n        return $.when.apply($, renderingPromises);\n    };\n\n    /**\n     * Render the conversation header.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data Data for header.\n     * @return {Object} jQuery promise\n     */\n    var renderHeader = function(header, body, footer, data) {\n        var headerContainer = getHeaderContent(header);\n        var template = TEMPLATES.HEADER_PUBLIC;\n        data.context.showrouteback = (header.attr('data-from-panel') === \"false\");\n        if (data.type == CONVERSATION_TYPES.PRIVATE) {\n            template = data.showControls ? TEMPLATES.HEADER_PRIVATE : TEMPLATES.HEADER_PRIVATE_NO_CONTROLS;\n        } else if (data.type == CONVERSATION_TYPES.SELF) {\n            template = TEMPLATES.HEADER_SELF;\n        }\n\n        return Templates.render(template, data.context)\n            .then(function(html, js) {\n                Templates.replaceNodeContents(headerContainer, html, js);\n                return;\n            });\n    };\n\n    /**\n     * Render the conversation footer.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data Data for footer.\n     * @return {Object} jQuery promise.\n     */\n    var renderFooter = function(header, body, footer, data) {\n        hideAllFooterElements(footer);\n\n        switch (data.type) {\n            case 'placeholder':\n                return showFooterPlaceholder(footer);\n            case 'add-contact':\n                return Str.get_strings([\n                        {\n                            key: 'requirecontacttomessage',\n                            component: 'core_message',\n                            param: data.user.fullname\n                        },\n                        {\n                            key: 'isnotinyourcontacts',\n                            component: 'core_message',\n                            param: data.user.fullname\n                        }\n                    ])\n                    .then(function(strings) {\n                        var title = strings[1];\n                        var text = strings[0];\n                        var footerContainer = getFooterRequireContactContainer(footer);\n                        footerContainer.find(SELECTORS.TITLE).text(title);\n                        footerContainer.find(SELECTORS.TEXT).text(text);\n                        showFooterRequireContact(footer);\n                        return strings;\n                    });\n            case 'edit-mode':\n                return showFooterEditMode(footer);\n            case 'content':\n                return showFooterContent(footer);\n            case 'unblock':\n                return showFooterRequireUnblock(footer);\n            case 'unable-to-message':\n                return showFooterUnableToMessage(footer);\n        }\n\n        return true;\n    };\n\n    /**\n     * Scroll to a message in the conversation.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Number} messageId Message id.\n     */\n    var renderScrollToMessage = function(header, body, footer, messageId) {\n        var messagesContainer = getMessagesContainer(body);\n        var messageElement = getMessageElement(body, messageId);\n        var position = messageElement.position();\n        // Scroll the message container down to the top of the message element.\n        if (position) {\n            var scrollTop = messagesContainer.scrollTop() + position.top;\n            messagesContainer.scrollTop(scrollTop);\n        }\n    };\n\n    /**\n     * Hide or show the conversation header.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isLoadingMembers Members loading.\n     */\n    var renderLoadingMembers = function(header, body, footer, isLoadingMembers) {\n        if (isLoadingMembers) {\n            hideHeaderContent(header);\n            showHeaderPlaceholder(header);\n        } else {\n            showHeaderContent(header);\n            hideHeaderPlaceholder(header);\n        }\n    };\n\n    /**\n     * Hide or show loading conversation messages.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isLoadingFirstMessages Messages loading.\n     */\n    var renderLoadingFirstMessages = function(header, body, footer, isLoadingFirstMessages) {\n        if (isLoadingFirstMessages) {\n            hideMessagesContainer(body);\n            showContentPlaceholder(body);\n        } else {\n            showMessagesContainer(body);\n            hideContentPlaceholder(body);\n        }\n    };\n\n    /**\n     * Hide or show loading more messages.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isLoading Messages loading.\n     */\n    var renderLoadingMessages = function(header, body, footer, isLoading) {\n        if (isLoading) {\n            showMoreMessagesLoadingIcon(body);\n        } else {\n            hideMoreMessagesLoadingIcon(body);\n        }\n    };\n\n    /**\n     * Hide or show the emoji picker.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} show Should the emoji picker be visible.\n     */\n    var renderShowEmojiPicker = function(header, body, footer, show) {\n        var container = getEmojiPickerContainer(footer);\n\n        if (show) {\n            container.removeClass('hidden');\n            Aria.unhide(container.get());\n            container.find(SELECTORS.EMOJI_PICKER_SEARCH_INPUT).focus();\n        } else {\n            container.addClass('hidden');\n            Aria.hide(container.get());\n        }\n    };\n\n    /**\n     * Hide or show the emoji auto complete.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} show Should the emoji picker be visible.\n     */\n    var renderShowEmojiAutoComplete = function(header, body, footer, show) {\n        var container = getEmojiAutoCompleteContainer(footer);\n\n        if (show) {\n            container.removeClass('hidden');\n            Aria.unhide(container.get());\n        } else {\n            container.addClass('hidden');\n            Aria.hide(container.get());\n        }\n    };\n\n    /**\n     * Show a confirmation dialogue\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {String} buttonSelectors Selectors for the buttons to show.\n     * @param {String} bodyText Text to show in dialogue.\n     * @param {String} headerText Text to show in dialogue header.\n     * @param {Bool} canCancel Can this dialogue be cancelled.\n     * @param {Bool} skipHeader Skip blanking out the header\n     * @param {Bool} showOk Show an 'Okay' button for a dialogue which will close it\n     */\n    var showConfirmDialogue = function(\n        header,\n        body,\n        footer,\n        buttonSelectors,\n        bodyText,\n        headerText,\n        canCancel,\n        skipHeader,\n        showOk\n    ) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var buttons = buttonSelectors.map(function(selector) {\n            return dialogue.find(selector);\n        });\n        var cancelButton = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_CANCEL_BUTTON);\n        var okayButton = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_OKAY_BUTTON);\n        var text = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_TEXT);\n        var dialogueHeader = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_HEADER);\n\n        dialogue.find('button').addClass('hidden');\n\n        if (canCancel) {\n            cancelButton.removeClass('hidden');\n        } else {\n            cancelButton.addClass('hidden');\n        }\n\n        if (showOk) {\n            okayButton.removeClass('hidden');\n        } else {\n            okayButton.addClass('hidden');\n        }\n\n        if (headerText) {\n            // Create the dialogue header.\n            dialogueHeader = $('<h3 class=\"h6\" data-region=\"dialogue-header\"></h3>');\n            dialogueHeader.text(headerText);\n            // Prepend it to the confirmation body.\n            var confirmDialogue = dialogue.find(SELECTORS.CONFIRM_DIALOGUE);\n            confirmDialogue.prepend(dialogueHeader);\n        } else if (dialogueHeader.length) {\n            // Header text is empty but dialogue header is present, so remove it.\n            dialogueHeader.remove();\n        }\n\n        buttons.forEach(function(button) {\n            button.removeClass('hidden');\n        });\n        text.text(bodyText);\n        showConfirmDialogueContainer(footer);\n        showConfirmDialogueContainer(body);\n\n        if (!skipHeader) {\n            showConfirmDialogueContainer(header);\n        }\n\n        dialogue.find(SELECTORS.CAN_RECEIVE_FOCUS).filter(':visible').first().focus();\n    };\n\n    /**\n     * Hide the dialogue\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @return {Bool} always true.\n     */\n    var hideConfirmDialogue = function(header, body, footer) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var cancelButton = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_CANCEL_BUTTON);\n        var okayButton = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_OKAY_BUTTON);\n        var text = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_TEXT);\n        var dialogueHeader = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_HEADER);\n\n        hideCheckDeleteDialogue(body);\n        hideConfirmDialogueContainer(body);\n        hideConfirmDialogueContainer(footer);\n        hideConfirmDialogueContainer(header);\n        dialogue.find('button').addClass('hidden');\n        cancelButton.removeClass('hidden');\n        okayButton.removeClass('hidden');\n        text.text('');\n\n        // Remove dialogue header if present.\n        if (dialogueHeader.length) {\n            dialogueHeader.remove();\n        }\n\n        header.find(SELECTORS.CAN_RECEIVE_FOCUS).first().focus();\n        return true;\n    };\n\n    /**\n     * Render the confirm block user dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} user User to block.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmBlockUser = function(header, body, footer, user) {\n        if (user) {\n            if (user.canmessageevenifblocked) {\n                return Str.get_string('cantblockuser', 'core_message', user.fullname)\n                    .then(function(string) {\n                        return showConfirmDialogue(header, body, footer, [], string, '', false, false, true);\n                    });\n            } else {\n                return Str.get_string('blockuserconfirm', 'core_message', user.fullname)\n                    .then(function(string) {\n                        return showConfirmDialogue(header, body, footer, [SELECTORS.ACTION_CONFIRM_BLOCK], string, '', true, false);\n                    });\n            }\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the confirm unblock user dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} user User to unblock.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmUnblockUser = function(header, body, footer, user) {\n        if (user) {\n            return Str.get_string('unblockuserconfirm', 'core_message', user.fullname)\n                .then(function(string) {\n                    return showConfirmDialogue(header, body, footer, [SELECTORS.ACTION_CONFIRM_UNBLOCK], string, '', true, false);\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the add user as contact dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} user User to add as contact.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmAddContact = function(header, body, footer, user) {\n        if (user) {\n            return Str.get_string('addcontactconfirm', 'core_message', user.fullname)\n                .then(function(string) {\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_CONFIRM_ADD_CONTACT],\n                        string,\n                        '',\n                        true,\n                        false\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the remove user from contacts dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} user User to remove from contacts.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmRemoveContact = function(header, body, footer, user) {\n        if (user) {\n            return Str.get_string('removecontactconfirm', 'core_message', user.fullname)\n                .then(function(string) {\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_CONFIRM_REMOVE_CONTACT],\n                        string,\n                        '',\n                        true,\n                        false\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the delete selected messages dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data If the dialogue should show and checkbox shows to delete message for all users.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmDeleteSelectedMessages = function(header, body, footer, data) {\n        var showmessage = null;\n        if (data.type == CONVERSATION_TYPES.SELF) {\n            // Message displayed to self-conversations is slighly different.\n            showmessage = 'deleteselectedmessagesconfirmselfconversation';\n        } else {\n            // This other message should be displayed.\n            if (data.canDeleteMessagesForAllUsers) {\n                showCheckDeleteDialogue(body);\n                showmessage = 'deleteforeveryoneselectedmessagesconfirm';\n            } else {\n                showmessage = 'deleteselectedmessagesconfirm';\n            }\n        }\n\n        if (data.show) {\n            return Str.get_string(showmessage, 'core_message')\n                .then(function(string) {\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_CONFIRM_DELETE_SELECTED_MESSAGES],\n                        string,\n                        '',\n                        true,\n                        false\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the confirm delete conversation dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {int|Null} type The conversation type to be removed.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmDeleteConversation = function(header, body, footer, type) {\n        var showmessage = null;\n        if (type == CONVERSATION_TYPES.SELF) {\n            // Message displayed to self-conversations is slighly different.\n            showmessage = 'deleteallselfconfirm';\n        } else if (type) {\n            // This other message should be displayed.\n            showmessage = 'deleteallconfirm';\n        }\n\n        if (showmessage) {\n            return Str.get_string(showmessage, 'core_message')\n                .then(function(string) {\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_CONFIRM_DELETE_CONVERSATION],\n                        string,\n                        '',\n                        true,\n                        false\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Render the confirm delete conversation dialogue.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} user The other user object.\n     * @return {Object} jQuery promise\n     */\n    var renderConfirmContactRequest = function(header, body, footer, user) {\n        if (user) {\n            return Str.get_string('userwouldliketocontactyou', 'core_message', user.fullname)\n                .then(function(string) {\n                    var buttonSelectors = [\n                        SELECTORS.ACTION_ACCEPT_CONTACT_REQUEST,\n                        SELECTORS.ACTION_DECLINE_CONTACT_REQUEST\n                    ];\n                    return showConfirmDialogue(header, body, footer, buttonSelectors, string, '', false, true);\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Show the checkbox to allow delete message for all.\n     *\n     * @param {Object} body The body container element.\n     */\n    var showCheckDeleteDialogue = function(body) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var checkboxRegion = dialogue.find(SELECTORS.DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE_CONTAINER);\n        checkboxRegion.removeClass('hidden');\n    };\n\n    /**\n     * Hide the checkbox to allow delete message for all.\n     *\n     * @param {Object} body The body container element.\n     */\n    var hideCheckDeleteDialogue = function(body) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var checkboxRegion = dialogue.find(SELECTORS.DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE_CONTAINER);\n        var checkbox = dialogue.find(SELECTORS.DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE);\n        checkbox.prop('checked', false);\n        checkboxRegion.addClass('hidden');\n    };\n\n    /**\n     * Show or hide the block / unblock option in the header dropdown menu.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isBlocked is user blocked.\n     */\n    var renderIsBlocked = function(header, body, footer, isBlocked) {\n        if (isBlocked) {\n            header.find(SELECTORS.ACTION_REQUEST_BLOCK).addClass('hidden');\n            header.find(SELECTORS.ACTION_REQUEST_UNBLOCK).removeClass('hidden');\n        } else {\n            header.find(SELECTORS.ACTION_REQUEST_BLOCK).removeClass('hidden');\n            header.find(SELECTORS.ACTION_REQUEST_UNBLOCK).addClass('hidden');\n        }\n    };\n\n    /**\n     * Show or hide the favourite / unfavourite option in the header dropdown menu\n     * and the favourite star in the header title.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} state is this conversation a favourite.\n     */\n    var renderIsFavourite = function(header, body, footer, state) {\n        var favouriteIcon = header.find(SELECTORS.FAVOURITE_ICON_CONTAINER);\n        var addFavourite = header.find(SELECTORS.ACTION_CONFIRM_FAVOURITE);\n        var removeFavourite = header.find(SELECTORS.ACTION_CONFIRM_UNFAVOURITE);\n\n        switch (state) {\n            case 'hide':\n                favouriteIcon.addClass('hidden');\n                addFavourite.addClass('hidden');\n                removeFavourite.addClass('hidden');\n                break;\n            case 'show-add':\n                favouriteIcon.addClass('hidden');\n                addFavourite.removeClass('hidden');\n                removeFavourite.addClass('hidden');\n                break;\n            case 'show-remove':\n                favouriteIcon.removeClass('hidden');\n                addFavourite.addClass('hidden');\n                removeFavourite.removeClass('hidden');\n                break;\n        }\n    };\n\n    /**\n     * Show or hide the mute / unmute option in the header dropdown menu\n     * and the muted icon in the header title.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {string} state The state of the conversation as defined by the patcher.\n     */\n    var renderIsMuted = function(header, body, footer, state) {\n        var muteIcon = header.find(SELECTORS.MUTED_ICON_CONTAINER);\n        var setMuted = header.find(SELECTORS.ACTION_CONFIRM_MUTE);\n        var unsetMuted = header.find(SELECTORS.ACTION_CONFIRM_UNMUTE);\n\n        switch (state) {\n            case 'hide':\n                muteIcon.addClass('hidden');\n                setMuted.addClass('hidden');\n                unsetMuted.addClass('hidden');\n                break;\n            case 'show-mute':\n                muteIcon.addClass('hidden');\n                setMuted.removeClass('hidden');\n                unsetMuted.addClass('hidden');\n                break;\n            case 'show-unmute':\n                muteIcon.removeClass('hidden');\n                setMuted.addClass('hidden');\n                unsetMuted.removeClass('hidden');\n                break;\n        }\n    };\n\n    /**\n     * Show or hide the add / remove user as contact option in the header dropdown menu.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} state the contact state.\n     */\n    var renderIsContact = function(header, body, footer, state) {\n        var addContact = header.find(SELECTORS.ACTION_REQUEST_ADD_CONTACT);\n        var removeContact = header.find(SELECTORS.ACTION_REQUEST_REMOVE_CONTACT);\n\n        switch (state) {\n            case 'pending-contact':\n                addContact.addClass('hidden');\n                removeContact.addClass('hidden');\n                break;\n            case 'contact':\n                addContact.addClass('hidden');\n                removeContact.removeClass('hidden');\n                break;\n            case 'non-contact':\n                addContact.removeClass('hidden');\n                removeContact.addClass('hidden');\n                break;\n        }\n    };\n\n    /**\n     * Show or hide confirm action from confirm dialogue is loading.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} isLoading confirm action is loading.\n     */\n    var renderLoadingConfirmAction = function(header, body, footer, isLoading) {\n        var dialogue = getConfirmDialogueContainer(body);\n        var buttons = dialogue.find('button');\n        var buttonText = dialogue.find(SELECTORS.CONFIRM_DIALOGUE_BUTTON_TEXT);\n        var loadingIcon = dialogue.find(SELECTORS.LOADING_ICON_CONTAINER);\n\n        if (isLoading) {\n            buttons.prop('disabled', true);\n            buttonText.addClass('hidden');\n            loadingIcon.removeClass('hidden');\n        } else {\n            buttons.prop('disabled', false);\n            buttonText.removeClass('hidden');\n            loadingIcon.addClass('hidden');\n        }\n    };\n\n    /**\n     * Show or hide the header and footer content for edit mode.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Bool} inEditMode In edit mode or not.\n     */\n    var renderInEditMode = function(header, body, footer, inEditMode) {\n        var messages = null;\n\n        if (inEditMode) {\n            messages = body.find(SELECTORS.MESSAGE_NOT_SELECTED);\n            messages.find(SELECTORS.MESSAGE_NOT_SELECTED_ICON).removeClass('hidden');\n            hideHeaderContent(header);\n            showHeaderEditMode(header);\n        } else {\n            messages = getMessagesContainer(body);\n            messages.find(SELECTORS.MESSAGE_NOT_SELECTED_ICON).addClass('hidden');\n            messages.find(SELECTORS.MESSAGE_SELECTED_ICON).addClass('hidden');\n            showHeaderContent(header);\n            hideHeaderEditMode(header);\n        }\n    };\n\n    /**\n     * Select or unselect messages.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data The messages to select or unselect.\n     */\n    var renderSelectedMessages = function(header, body, footer, data) {\n        var hasSelectedMessages = data.count > 0;\n\n        if (data.add.length) {\n            data.add.forEach(function(messageId) {\n                var message = getMessageElement(body, messageId);\n                message.find(SELECTORS.MESSAGE_NOT_SELECTED_ICON).addClass('hidden');\n                message.find(SELECTORS.MESSAGE_SELECTED_ICON).removeClass('hidden');\n                message.attr('aria-checked', true);\n            });\n        }\n\n        if (data.remove.length) {\n            data.remove.forEach(function(messageId) {\n                var message = getMessageElement(body, messageId);\n\n                if (hasSelectedMessages) {\n                    message.find(SELECTORS.MESSAGE_NOT_SELECTED_ICON).removeClass('hidden');\n                }\n\n                message.find(SELECTORS.MESSAGE_SELECTED_ICON).addClass('hidden');\n                message.attr('aria-checked', false);\n            });\n        }\n\n        setMessagesSelectedCount(header, data.count);\n    };\n\n    /**\n     * Show or hide the require add contact panel.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} data Whether the user has to be added a a contact.\n     * @return {Object} jQuery promise\n     */\n    var renderRequireAddContact = function(header, body, footer, data) {\n        if (data.show && !data.hasMessages) {\n            return Str.get_strings([\n                    {\n                        key: 'requirecontacttomessage',\n                        component: 'core_message',\n                        param: data.user.fullname\n                    },\n                    {\n                        key: 'isnotinyourcontacts',\n                        component: 'core_message',\n                        param: data.user.fullname\n                    }\n                ])\n                .then(function(strings) {\n                    var title = strings[1];\n                    var text = strings[0];\n                    return showConfirmDialogue(\n                        header,\n                        body,\n                        footer,\n                        [SELECTORS.ACTION_REQUEST_ADD_CONTACT],\n                        text,\n                        title,\n                        false,\n                        true\n                    );\n                });\n        } else {\n            return hideConfirmDialogue(header, body, footer);\n        }\n    };\n\n    /**\n     * Show or hide the self-conversation message.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} displayMessage should the message be displayed?.\n     * @return {Object|true} jQuery promise\n     */\n    var renderSelfConversationMessage = function(header, body, footer, displayMessage) {\n        var container = getSelfConversationMessageContainer(body);\n        if (displayMessage) {\n            container.removeClass('hidden');\n        } else {\n            container.addClass('hidden');\n        }\n        return true;\n    };\n\n    /**\n     * Show or hide the require add contact panel.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @param {Object} userFullName Full name of the other user.\n     * @return {Object|true} jQuery promise\n     */\n    var renderContactRequestSent = function(header, body, footer, userFullName) {\n        var container = getContactRequestSentContainer(body);\n        if (userFullName) {\n            return Str.get_string('yourcontactrequestpending', 'core_message', userFullName)\n                .then(function(string) {\n                    container.find(SELECTORS.TEXT).text(string);\n                    container.removeClass('hidden');\n                    return string;\n                });\n        } else {\n            container.addClass('hidden');\n            return true;\n        }\n    };\n\n    /**\n     * Reset the UI to the initial state.\n     *\n     * @param {Object} header The header container element.\n     * @param {Object} body The body container element.\n     * @param {Object} footer The footer container element.\n     * @return {Bool}\n     */\n    var renderReset = function(header, body, footer) {\n        hideConfirmDialogue(header, body, footer);\n        hideContactRequestSentContainer(body);\n        hideSelfConversationMessageContainer(body);\n        hideAllHeaderElements(header);\n        showHeaderPlaceholder(header);\n        hideAllFooterElements(footer);\n        showFooterPlaceholder(footer);\n        return true;\n    };\n\n    var render = function(header, body, footer, patch) {\n        var configs = [\n            {\n                // Resetting the UI needs to come first, if it's required.\n                reset: renderReset\n            },\n            {\n                // Any async rendering (stuff that requires templates, strings etc) should\n                // go in here.\n                conversation: renderConversation,\n                header: renderHeader,\n                footer: renderFooter,\n                confirmBlockUser: renderConfirmBlockUser,\n                confirmUnblockUser: renderConfirmUnblockUser,\n                confirmAddContact: renderConfirmAddContact,\n                confirmRemoveContact: renderConfirmRemoveContact,\n                confirmDeleteSelectedMessages: renderConfirmDeleteSelectedMessages,\n                confirmDeleteConversation: renderConfirmDeleteConversation,\n                confirmContactRequest: renderConfirmContactRequest,\n                requireAddContact: renderRequireAddContact,\n                selfConversationMessage: renderSelfConversationMessage,\n                contactRequestSent: renderContactRequestSent\n            },\n            {\n                loadingMembers: renderLoadingMembers,\n                loadingFirstMessages: renderLoadingFirstMessages,\n                loadingMessages: renderLoadingMessages,\n                isBlocked: renderIsBlocked,\n                isContact: renderIsContact,\n                isFavourite: renderIsFavourite,\n                isMuted: renderIsMuted,\n                loadingConfirmAction: renderLoadingConfirmAction,\n                inEditMode: renderInEditMode,\n                showEmojiPicker: renderShowEmojiPicker,\n                showEmojiAutoComplete: renderShowEmojiAutoComplete,\n            },\n            {\n                // Scrolling should be last to make sure everything\n                // on the page is visible.\n                scrollToMessage: renderScrollToMessage,\n                selectedMessages: renderSelectedMessages\n            }\n        ];\n        // Helper function to process each of the configs above.\n        var processConfig = function(config) {\n            var results = [];\n\n            for (var key in patch) {\n                if (config.hasOwnProperty(key)) {\n                    var renderFunc = config[key];\n                    var patchValue = patch[key];\n                    results.push(renderFunc(header, body, footer, patchValue));\n                }\n            }\n\n            return results;\n        };\n\n        // The first config is special because it resets the UI.\n        var renderingPromises = processConfig(configs[0]);\n        // The second config is special because it contains async rendering.\n        renderingPromises = renderingPromises.concat(processConfig(configs[1]));\n\n        // Wait for the async rendering to complete before processing the\n        // rest of the configs, in order.\n        return $.when.apply($, renderingPromises)\n            .then(function() {\n                for (var i = 2; i < configs.length; i++) {\n                    processConfig(configs[i]);\n                }\n\n                return;\n            })\n            .catch(Notification.exception);\n    };\n\n    return {\n        render: render,\n    };\n});\n"],"names":["define","$","Notification","Str","Templates","UserDate","Constants","Aria","SELECTORS","TEMPLATES","CONVERSATION_TYPES","getMessagesContainer","body","find","CONTENT_MESSAGES_CONTAINER","getSelfConversationMessageContainer","SELF_CONVERSATION_MESSAGE_CONTAINER","getContactRequestSentContainer","CONTACT_REQUEST_SENT_MESSAGE_CONTAINER","getFooterContentContainer","footer","CONTENT_MESSAGES_FOOTER_CONTAINER","getFooterEditModeContainer","CONTENT_MESSAGES_FOOTER_EDIT_MODE_CONTAINER","getFooterPlaceholderContainer","PLACEHOLDER_CONTAINER","showFooterPlaceholder","removeClass","getFooterRequireContactContainer","CONTENT_MESSAGES_FOOTER_REQUIRE_CONTACT_CONTAINER","getFooterRequireUnblockContainer","CONTENT_MESSAGES_FOOTER_REQUIRE_UNBLOCK_CONTAINER","getFooterUnableToMessageContainer","CONTENT_MESSAGES_FOOTER_UNABLE_TO_MESSAGE_CONTAINER","hideAllFooterElements","addClass","hideFooterContent","hideFooterEditMode","hideFooterPlaceholder","hideFooterRequireContact","hideFooterRequireUnblock","hideFooterUnableToMessage","getContentPlaceholderContainer","CONTENT_PLACEHOLDER_CONTAINER","getHeaderContent","header","HEADER","showHeaderContent","hideHeaderContent","getHeaderEditMode","HEADER_EDIT_MODE","hideHeaderEditMode","getHeaderPlaceholderContainer","HEADER_PLACEHOLDER_CONTAINER","showHeaderPlaceholder","hideHeaderPlaceholder","getMessageElement","messageId","getDayElement","dayTimeCreated","getMoreMessagesLoadingIconContainer","MORE_MESSAGES_LOADING_ICON_CONTAINER","getConfirmDialogueContainer","root","CONFIRM_DIALOGUE_CONTAINER","showConfirmDialogueContainer","container","siblings","hide","get","attr","hideConfirmDialogueContainer","unhide","removeAttr","formatMessagesForTemplate","messages","datesCache","map","message","id","isread","isRead","fromloggedinuser","fromLoggedInUser","userfrom","userFrom","text","formattedtime","timeCreated","renderConversation","data","renderingPromises","hasAddDays","days","add","length","hasAddMessages","hasUpdateMessages","update","timestampsToFormat","datesCachePromise","Deferred","resolve","promise","concat","reduce","carry","day","value","timestamps","push","before","after","get_string","then","format","requests","timestamp","formattedTimes","index","messagesContainer","daysRenderPromises","render","DAY","when","apply","forEach","html","element","insertBefore","append","catch","renderAddDays","messagesData","formattedMessages","MESSAGES","messageList","messageHtml","DAY_MESSAGES_CONTAINER","renderAddMessages","formattedTime","LOADING_ICON_CONTAINER","TIME_CREATED","sendState","loading","time","retry","RETRY_SEND","TEXT_CONTAINER","errorMessage","messageContainer","ERROR_MESSAGE_CONTAINER","ERROR_MESSAGE","renderUpdateMessages","remove","renderRemoveDays","renderRemoveMessages","renderHeader","headerContainer","template","HEADER_PUBLIC","context","showrouteback","type","PRIVATE","showControls","HEADER_PRIVATE","HEADER_PRIVATE_NO_CONTROLS","SELF","HEADER_SELF","js","replaceNodeContents","renderFooter","get_strings","key","component","param","user","fullname","strings","title","footerContainer","TITLE","TEXT","showFooterRequireContact","showFooterEditMode","showFooterContent","showFooterRequireUnblock","showFooterUnableToMessage","renderScrollToMessage","position","scrollTop","top","renderLoadingMembers","isLoadingMembers","renderLoadingFirstMessages","isLoadingFirstMessages","hideMessagesContainer","showContentPlaceholder","showMessagesContainer","hideContentPlaceholder","renderLoadingMessages","isLoading","showMoreMessagesLoadingIcon","hideMoreMessagesLoadingIcon","renderShowEmojiPicker","show","EMOJI_PICKER_CONTAINER","getEmojiPickerContainer","EMOJI_PICKER_SEARCH_INPUT","focus","renderShowEmojiAutoComplete","EMOJI_AUTO_COMPLETE_CONTAINER","getEmojiAutoCompleteContainer","showConfirmDialogue","buttonSelectors","bodyText","headerText","canCancel","skipHeader","showOk","dialogue","buttons","selector","cancelButton","CONFIRM_DIALOGUE_CANCEL_BUTTON","okayButton","CONFIRM_DIALOGUE_OKAY_BUTTON","CONFIRM_DIALOGUE_TEXT","dialogueHeader","CONFIRM_DIALOGUE_HEADER","CONFIRM_DIALOGUE","prepend","button","CAN_RECEIVE_FOCUS","filter","first","hideConfirmDialogue","hideCheckDeleteDialogue","renderConfirmBlockUser","canmessageevenifblocked","string","ACTION_CONFIRM_BLOCK","renderConfirmUnblockUser","ACTION_CONFIRM_UNBLOCK","renderConfirmAddContact","ACTION_CONFIRM_ADD_CONTACT","renderConfirmRemoveContact","ACTION_CONFIRM_REMOVE_CONTACT","renderConfirmDeleteSelectedMessages","showmessage","canDeleteMessagesForAllUsers","showCheckDeleteDialogue","ACTION_CONFIRM_DELETE_SELECTED_MESSAGES","renderConfirmDeleteConversation","ACTION_CONFIRM_DELETE_CONVERSATION","renderConfirmContactRequest","ACTION_ACCEPT_CONTACT_REQUEST","ACTION_DECLINE_CONTACT_REQUEST","DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE_CONTAINER","checkboxRegion","DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE","prop","renderIsBlocked","isBlocked","ACTION_REQUEST_BLOCK","ACTION_REQUEST_UNBLOCK","renderIsFavourite","state","favouriteIcon","FAVOURITE_ICON_CONTAINER","addFavourite","ACTION_CONFIRM_FAVOURITE","removeFavourite","ACTION_CONFIRM_UNFAVOURITE","renderIsMuted","muteIcon","MUTED_ICON_CONTAINER","setMuted","ACTION_CONFIRM_MUTE","unsetMuted","ACTION_CONFIRM_UNMUTE","renderIsContact","addContact","ACTION_REQUEST_ADD_CONTACT","removeContact","ACTION_REQUEST_REMOVE_CONTACT","renderLoadingConfirmAction","buttonText","CONFIRM_DIALOGUE_BUTTON_TEXT","loadingIcon","renderInEditMode","inEditMode","MESSAGE_NOT_SELECTED","MESSAGE_NOT_SELECTED_ICON","showHeaderEditMode","MESSAGE_SELECTED_ICON","renderSelectedMessages","hasSelectedMessages","count","MESSAGES_SELECTED_COUNT","setMessagesSelectedCount","renderRequireAddContact","hasMessages","renderSelfConversationMessage","displayMessage","renderContactRequestSent","userFullName","renderReset","hideContactRequestSentContainer","hideSelfConversationMessageContainer","hideAllHeaderElements","patch","configs","reset","conversation","confirmBlockUser","confirmUnblockUser","confirmAddContact","confirmRemoveContact","confirmDeleteSelectedMessages","confirmDeleteConversation","confirmContactRequest","requireAddContact","selfConversationMessage","contactRequestSent","loadingMembers","loadingFirstMessages","loadingMessages","isContact","isFavourite","isMuted","loadingConfirmAction","showEmojiPicker","showEmojiAutoComplete","scrollToMessage","selectedMessages","processConfig","config","results","hasOwnProperty","renderFunc","patchValue","i","exception"],"mappings":"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"}